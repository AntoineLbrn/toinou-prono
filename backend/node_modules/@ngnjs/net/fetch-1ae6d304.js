// @ngnjs/net v1.0.0-alpha.23
// Copyright (c) 2021 Corey Butler
// Released under the MIT License.
import{B as BLOBS,d as coalesce$1}from"./index.js";export default function Fetch(resource,init={}){return new Promise((resolve,reject)=>globalThis.fetch(resource.href,init).then(async r=>{try{const rt=init.responseType,result=Object.assign({status:r.status,statusText:r.statusText,headers:r.headers,ok:r.ok,redirected:r.redirected,trailers:r.trailers,type:r.type,url:r.url},{body:init.body,responseText:""});Object.defineProperty(result,"request",{enumerable:!1,configurable:!1,writable:!1,value:Object.assign({},init,{url:resource.href})});let body="";switch(body="arraybuffer"===rt?await r.arrayBuffer().catch(reject):BLOBS.has(rt)?await r.blob().catch(reject):await r.text().catch(reject),rt){case"document":if(/^text\/.*/.test(body.type)){result.responseText=await body.text().catch(reject);break}case"arraybuffer":case"blob":result.body=new globalThis.Blob(body.slice(),{type:coalesce$1(result.headers["content-type"])});break;default:result.responseText=body||result.statusText}Object.defineProperty(result,"JSON",{enumerable:!0,get(){try{return JSON.parse(result.responseText)}catch(e){return null}}});const hiddenBody=result.body,hiddenSource=result._bodySource,hiddenStream=result._stream;return delete result.body,delete result._bodySource,delete result._stream,Object.defineProperties(result,{body:{get:()=>hiddenBody||result.responseText},_bodySource:{get:()=>hiddenSource},_stream:{get:()=>hiddenStream}}),"HEAD"===init.method&&(result.responseText=""),resolve(result)}catch(e){console.log(e),reject(e)}}).catch(reject))}
//# sourceMappingURL=../net-debug/fetch-1ae6d304.js.map
