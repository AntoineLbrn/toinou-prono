// @ngnjs/net v1.0.0-alpha.23
// Copyright (c) 2021 Corey Butler
// Released under the MIT License.
function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _classPrivateFieldGet(receiver,privateMap){return function _classApplyDescriptorGet(receiver,descriptor){return descriptor.get?descriptor.get.call(receiver):descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const PATTERN=/^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;class Version{constructor(version){const parts=PATTERN.exec(version);if(!parts)throw new Error("Invalid semantic version.");this.major=parseInt(parts[1],10),this.minor=parseInt(parts[2],10),this.patch=parseInt(parts[3],10),this.prerelease=parts[4],this.build=parts[5]}toString(){return`${this.major}.${this.minor}.${this.patch}${this.prerelease?"-"+this.prerelease:""}`}get name(){const match=/^(a-zA-Z0-9-_)[\.|\+]?/i.exec(this.prerelease);return match?match[1].trim():null}get subversion(){return null===this.name?0:this.prerelease.replace(this.name,"").trim()}}function normalize(a,b){return{a:"string"==typeof a?new Version(a):a,b:"string"==typeof b?new Version(b):b}}class SV{static parse(version){return new Version(version)}static gt(){const{a:a,b:b}=normalize(...arguments);if(a.major<b.major)return!1;if(a.minor<b.minor)return!1;if(a.patch<b.patch)return!1;if(null===a.name&&null!==b.name)return!0;if(null!==a.name&&null===b.name)return!1;if(a.name!==b.name&&null!==a.name)return a.name>b.name;if(!isNaN(a.subversion)&&isNaN(b.subversion))return!0;if(isNaN(a.subversion)&&!isNaN(b.subversion))return!1;if(typeof a.subversion==typeof b.subversion&&"string"==typeof a.subversion)return a.subversion.length>b.subversions.length;if(!a.prerelease&&b.prerelease)return!0;if(a.prerelease&&!b.prerelease)return!1;if(a.prerelease&&b.prerelease)try{const{aPrefix:aPrefix}=/^(<aPrefix>[^\d]+)/i.exec(a.prerelease).groups,{bPrefix:bPrefix}=/^(<bPrefix>[^\d]+)/i.exec(b.prerelease).groups;if(aPrefix!==bPrefix)return aPrefix>bPrefix;const{aNum:aNum}=/(<aNum>^\d+)/i.exec(a.prerelease).groups,{bNum:bNum}=/(<bNum>^\d+)/i.exec(b.prerelease).groups;return void 0!==aNum&&(void 0===bNum||aNum!==bNum&&aNum>bNum)}catch(e){return a.prerelease>b.prerelease}return!0}static gte(){return SV.eq(...arguments)||SV.gt(...arguments)}static lt(){return!SV.gte(...arguments)}static lte(){return SV.eq(...arguments)||SV.lt(...arguments)}static eq(){const{a:a,b:b}=normalize(...arguments);return a.toString()===b.toString()}static sort(){return Array.from(new Set(Array.from(arguments).map(v=>v instanceof Version?v:new Version(v)).sort((a,b)=>SV.gt(a,b)?-1:SV.lt(a,b)?1:0)))}static select(pattern){if(arguments.length<2)return null;const list=SV.sort(...Array.from(arguments).slice(1)),match=/^(\^|~|<=?|>=?)(.*)/i.exec(pattern||"");let version=match?match[2]:pattern;if(!match){const i=list.map(i=>i.toString()).indexOf(version);return i>=0?list[i].toString():null}return version=new Version(version),list.filter(i=>{switch(match[1]){case">":return SV.gt(i,version);case">=":return SV.gte(i,version);case"<":return SV.lt(i,version);case"<=":return SV.lte(i,version);case"^":return SV.gte(i,version)&&i.major===version.major;case"~":return SV.gte(i,version)&&i.major===version.major&&i.minor===version.minor}}).shift().toString()}}const ID=Symbol.for("NGN"),priv=(value,writable=!1)=>({enumerable:!1,configurable:!1,writable:writable,value:value});class Reference{constructor(version=null){Object.defineProperties(this,{instance:priv(reference=>globalThis[reference]&&(reference=globalThis[reference])instanceof Map&&reference.has("INSTANCE")?reference.get("INSTANCE"):null),base:priv({},!0),ref:priv(null,!0),proxy:priv(null,!0)}),this.use(version);const me=this;return this.proxy=new Proxy(this.base,{get(target,property){if(void 0!==target[property])return target[property];if(me.ref){const plugins=globalThis[me.ref].get("PLUGINS")||new Map;if(plugins.has(property))return plugins.get(property)}return me[property]},set(target,property,value){if(null===me.ref)throw new Error("Cannot find NGN.");const plugins=globalThis[me.ref].get("plugins")||new Map;return plugins.set(property,value),globalThis[me.ref].set("PLUGINS",plugins),!0}}),Object.freeze(this.proxy),this.proxy}get availableVersions(){let options=globalThis[ID]||[];return 0===options.length&&(options=Object.getOwnPropertySymbols(globalThis).filter(s=>globalThis[s]instanceof Map&&globalThis[s].has("REFERENCE_ID")&&globalThis[s].get("REFERENCE_ID")===s)),options.sort((a,b)=>SV.gte(globalThis[a].get("VERSION"),globalThis[b].get("VERSION"))?-1:1)}export(name){const plugins=globalThis[this.ref].get("plugins")||new Map,elements=new Set(Array.from(arguments).slice(1));if(0===elements.size)throw new Error("Missing arguments. Nothing was specified to export.");plugins.set(name,Array.from(elements)),globalThis[this.ref].set("PLUGINS",plugins)}use(version=null){let options=this.availableVersions;return version&&(version=SV.select(version,...options.map(id=>globalThis[id].get("VERSION"))),options=options.filter(id=>globalThis[id]instanceof Map&&version===globalThis[id].get("VERSION"))),0===options.length?null:(this.ref=options.shift(),this.base=this.instance(this.ref),this.proxy)}requires(){if(arguments.length>0){if(null===this.base)throw new Error("NGN is required.");const missing=new Set;for(const el of arguments)if(el.indexOf(":")>0||!this.exist(el)){const match=/(?<feature>[^:\n]+):?(?<version>\d+\.\d+\.\d+([-+].+)?)?/i.exec(el);if(match){const{feature:feature,version:version}=match.groups;if(this.base.plugins[feature])try{const pv="function"==typeof this.base.plugins[feature].version?typeof this.base.plugins[feature].version():typeof this.base.plugins[feature].version;SV.select(version,pv)!==pv&&missing.add(feature+"@"+version)}catch(e){missing.add(feature+"@"+version)}else missing.add(feature)}}if(missing.size>0){const msg=`The following NGN elements are required but not present in the environment: ${Array.from(missing).join(", ")}. Make sure these have been imported.`;throw new Error(msg)}}return this.proxy}exist(){for(const component of arguments){let Element=component.split(".").reduceRight((acc,el)=>void 0===acc[el]?acc=acc[el]:acc[el],this.base);if(void 0===Element){if(Element=globalThis[component],void 0===Element)return!1;if("function"==typeof Element)try{if(!(new Element instanceof Error))return!1}catch(e){return!1}}}return!0}}const NGN$7=new Reference,DEFAULT_PORT={http:80,https:443,ssh:22,ldap:389,sldap:689,ftp:20,ftps:989,sftp:21},HTTP_METHODS$1=new Set(["OPTIONS","HEAD","GET","POST","PUT","DELETE","TRACE","CONNECT"]),CACHE_MODES=new Set(["default","no-store","reload","no-cache","force-cache","only-if-cached"]),CORS_MODES=new Set(["cors","no-cors","same-origin"]),REFERRER_MODES=new Set(["","no-referrer","no-referrer-when-downgrade","same-origin","origin","strict-origin","origin-when-cross-origin","strict-origin-when-cross-origin","unsafe-url"]),REQUEST_CREDENTIALS=new Set(["omit","same-origin","include"]),REDIRECT_MODES=new Set(["follow","error","manual"]),IDEMPOTENT_METHODS=new Set(["OPTIONS","HEAD","GET"]),REQUEST_NOBODY_METHODS=new Set(["HEAD","GET"]),URL_PATTERN=/^(([^:/?#]+):)(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/,URL_RELATIVE_PATTERN=/^\.{1,2}\//gi,BTOA=globalThis.btoa||function(v){return Buffer.from(v,"binary").toString("base64")};let HOSTNAME=globalThis.location?globalThis.location.host:"localhost";const interfaces=new Set(["127.0.0.1","localhost",HOSTNAME]);"node"===NGN$7.runtime&&(async()=>{try{const polyfills=await import("@ngnjs/libnet-node");polyfills.INTERFACES.forEach(i=>interfaces.add(i)),HOSTNAME=polyfills.HOSTNAME}catch(e){if("ERR_MODULE_NOT_FOUND"!==e.code)throw e}})();const INTERFACES=Array.from(interfaces);function nullIf(sourceExpression,comparisonExpression=""){try{if(sourceExpression!==comparisonExpression){if(typeof sourceExpression!=typeof comparisonExpression)return sourceExpression;if("string"==typeof sourceExpression&&sourceExpression.trim()!==comparisonExpression.trim())return sourceExpression}return sourceExpression===comparisonExpression?null:sourceExpression}catch(e){throw new Error(`nullIf could not compare '${sourceExpression}' to '${comparisonExpression}'. ${e.message}`)}}function converge(){if(arguments.length<2)return null;if(2===arguments.length)return void 0===arguments[1]?null:!0===arguments[0]?nullIf(arguments[1]):arguments[1];for(let i=1;i<arguments.length;i++)if(void 0!==arguments[i]&&null!==(arguments[0]?nullIf(arguments[i]):arguments[i]))return arguments[i];return null}function coalesceb(){return converge(!0,...arguments)}function typeOf(el){if(void 0===el)return"undefined";if(null===el)return"null";const value=Object.prototype.toString.call(el).split(" ")[1].replace(/[^A-Za-z]/gi,"").toLowerCase();if("function"===value||"function"==typeof el){if(!el.name){const name=coalesceb(el.toString().replace(/\n/gi,"").replace(/^function\s|\(.*$/gim,""),"function");return name.indexOf(" ")>=0?"function":name}return coalesceb(el.name,"function")}return value.toLowerCase()}var operators=Object.freeze({__proto__:null,typeOf:typeOf,converge:converge,nullIf:nullIf,coalesce:function coalesce(){return converge(!1,...arguments)},coalesceb:coalesceb,getPrimitive:function getPrimitive(type,defaultType){switch(type.trim().toLowerCase()){case"number":return Number;case"regex":case"regexp":return RegExp;case"boolean":return Boolean;case"symbol":return Symbol;case"date":return Date;case"array":return Array;case"object":return Object;case"function":return Function;case"string":return String;default:return defaultType}}});function force$1(value){switch(typeOf(value)){case"boolean":return value;case"number":return 0!==value;case"string":return"false"!==value.trim().toLowerCase();default:return null!==coalesceb(value)}}const force$2=(value,radix=null)=>{try{switch(typeOf(value)){case"boolean":return value?1:0;case"number":return value;case"date":return value.getTime();case"string":return null!==radix?parseInt(value,radix):parseFloat(value);default:return NaN}}catch(e){return NaN}};function isSuperSet(mainset,subset){if(subset.size>mainset.size||0===subset.size)return!1;for(const element of subset.values())if(!mainset.has(element))return!1;return!0}function concat(){const args=Array.from(arguments);return new Set(function*(){for(;args.length>0;)yield*args.shift()}())}function intersection(){switch(arguments.length){case 0:return new Set;case 1:return arguments[0]}const mega=concat(...arguments);for(const arg of arguments)for(const value of mega)arg.has(value)||mega.delete(value);return mega}function except(setA){if(arguments.length<2)return arguments[0]||new Set;const base=new Set(setA),args=Array.from(arguments).slice(1);return args.forEach(val=>val.forEach(v=>base.delete(v))),base}function diff(setA,setB){const difference=new Set(setA);for(const el of setB)difference.has(el)?difference.delete(el):difference.add(el);return difference}function equal(){const args=Array.from(arguments),base=args.shift();for(const val of args)if(except(base,val).size>0||except(val,base).size>0)return!1;return!0}function all(){const properties=new Set(Object.keys(arguments[0]));for(let i=1;i<arguments.length;i++)if(!properties.has(arguments[i]))return!1;return!0}function missing(){const properties=new Set(Object.keys(arguments[0]));return Array.from(diff(properties,new Set(Array.from(arguments).slice(1))))}Object.freeze({__proto__:null,isSuperSet:isSuperSet,concat:concat,intersection:intersection,except:except,diff:diff,equal:equal,polyfill:function polyfill(){Set.prototype.isSubsetOf=function(subset){return isSuperSet(subset,this)},Set.prototype.isSupersetOf=function(subset){return isSuperSet(this,subset)},Set.prototype.intersection=function(){return intersection(this,...arguments)},Set.prototype.except=function(){return except(this,...arguments)},Set.prototype.diff=function(compare){return diff(this,compare)},Set.prototype.equal=function(){return equal(this,...arguments)},Set.prototype.concat=function(){return concat(this,...arguments)}}});const serializeArray=data=>"object"==typeof data?serialize(data):data;function serialize(data){const type=typeOf(data);if("object"!=typeof data)throw new Error(`Cannot serialize ${type} value (must be an object).`);if("array"===type)return data.map(serializeArray);const result={};for(const[attr,value]of Object.entries(data))if(void 0!==value)switch(typeOf(value)){case"object":result[attr]=serialize(value);break;case"array":result[attr]=value.map(serializeArray);break;case"date":result[attr]=value.toISOString();break;case"symbol":case"regexp":result[attr]=value.toString();break;case"weakmap":case"map":result[attr]=serialize(Object.fromEntries(value));break;case"weakset":case"set":result[attr]=Array.from(value);break;case"function":break;default:result[attr]=value}return result}var object=Object.freeze({__proto__:null,all:all,any:function any(){const properties=new Set(Object.keys(arguments[0]));for(let i=1;i<arguments.length;i++)if(properties.has(arguments[i]))return!0;return!1},exactly:function exactly(){const properties=new Set(Object.keys(arguments[0])),args=new Set(Array.from(arguments).slice(1));return equal(properties,args)},require:function require(){if(!all(...arguments))throw new Error(`${arguments[0].constructor.name} is missing the following attributes: ${missing(...arguments).join(", ")}`)},extraneous:function extraneous(){const extras=new Set(Object.keys(arguments[0]));return Array.from(except(extras,new Set(Array.from(arguments).slice(1))))},missing:missing,mixin:function mixin(source=null,dest=null,overwrite=!0){const owfn="function"==typeof overwrite,ow="boolean"==typeof overwrite&&overwrite;source&&dest&&(source="function"==typeof source?source.prototype:source,dest="function"==typeof dest?dest.prototype:dest,Object.getOwnPropertyNames(source).forEach((function(attr){const definition=Object.getOwnPropertyDescriptor(source,attr);(void 0===dest[attr]||ow||owfn&&overwrite(attr,definition))&&Object.defineProperty(dest,attr,definition)})),Object.getOwnPropertyNames(Object.getPrototypeOf(source)).filter(attr=>"constructor"!==attr.trim().toLowerCase()&&void 0===dest[attr]).forEach(attr=>{void 0===Object.getOwnPropertyDescriptor(source,attr)&&"function"==typeof source[attr]&&Object.defineProperty(dest,attr,{get(){return source[attr].apply(this,arguments)}})}),Object.getOwnPropertySymbols(source).forEach(s=>{dest[s]=source[s]}))},serialize:serialize});(async()=>{await(globalThis.crypto||import("crypto"))})();const{typeOf:typeOf$1,converge:converge$1,nullIf:nullIf$1,coalesce:coalesce$1,coalesceb:coalesceb$1,getPrimitive:getPrimitive$1}=operators,NGN$6=(new Reference).requires("EventEmitter","WARN"),localschemes=new Set(INTERFACES.map(host=>host.trim().toLowerCase()));var _uri$1=new WeakMap,_originalURI=new WeakMap,_parts=new WeakMap,_protocol=new WeakMap,_username=new WeakMap,_password=new WeakMap,_hostname=new WeakMap,_port=new WeakMap,_path=new WeakMap,_querystring=new WeakMap,_queryObject=new WeakMap,_querymode=new WeakMap,_hash=new WeakMap,_parsed=new WeakMap,_insecure=new WeakMap,_defaultPort=new WeakMap,_parse=new WeakMap,_deserializeQueryParameters=new WeakMap;class Address extends NGN$6.EventEmitter{constructor(uri=null,insecure=!1){super(),_uri$1.set(this,{writable:!0,value:void 0}),_originalURI.set(this,{writable:!0,value:void 0}),_parts.set(this,{writable:!0,value:null}),_protocol.set(this,{writable:!0,value:globalThis.location?globalThis.location.protocol.replace(":",""):"http"}),_username.set(this,{writable:!0,value:void 0}),_password.set(this,{writable:!0,value:void 0}),_hostname.set(this,{writable:!0,value:HOSTNAME}),_port.set(this,{writable:!0,value:null}),_path.set(this,{writable:!0,value:"/"}),_querystring.set(this,{writable:!0,value:null}),_queryObject.set(this,{writable:!0,value:{}}),_querymode.set(this,{writable:!0,value:"boolean"}),_hash.set(this,{writable:!0,value:null}),_parsed.set(this,{writable:!0,value:!1}),_insecure.set(this,{writable:!0,value:!1}),_defaultPort.set(this,{writable:!0,value:DEFAULT_PORT}),_parse.set(this,{writable:!0,value:(force=!1)=>{if(_classPrivateFieldGet(this,_parsed)&&!force)return;_classPrivateFieldGet(this,_uri$1)&&URL_RELATIVE_PATTERN.test(_classPrivateFieldGet(this,_uri$1))&&globalThis.location&&globalThis.location.pathname&&_classPrivateFieldSet(this,_uri$1,`${globalThis.location.pathname}/${_classPrivateFieldGet(this,_uri$1)}`);const parts=new URL(_classPrivateFieldGet(this,_uri$1)||"/",`${_classPrivateFieldGet(this,_protocol)}://${_classPrivateFieldGet(this,_hostname)}`);_classPrivateFieldSet(this,_parts,parts),_classPrivateFieldSet(this,_protocol,coalesceb$1(parts.protocol,_classPrivateFieldGet(this,_protocol)).replace(":","")),_classPrivateFieldSet(this,_hostname,coalesceb$1(parts.hostname,_classPrivateFieldGet(this,_hostname))),_classPrivateFieldSet(this,_port,coalesceb$1(parts.port,_classPrivateFieldGet(this,_defaultPort)[_classPrivateFieldGet(this,_protocol)])),_classPrivateFieldSet(this,_username,coalesceb$1(parts.username)),_classPrivateFieldSet(this,_password,coalesceb$1(parts.password)),_classPrivateFieldSet(this,_path,coalesceb$1(parts.pathname,"/")),_classPrivateFieldSet(this,_querystring,coalesce$1(parts.search,"").replace(/^\?/,"").trim()),_classPrivateFieldSet(this,_hash,coalesceb$1(parts.hash.replace(/^#+/,""))),_classPrivateFieldSet(this,_queryObject,_classPrivateFieldGet(this,_deserializeQueryParameters).call(this,_classPrivateFieldGet(this,_querystring))),null!==_classPrivateFieldGet(this,_port)&&_classPrivateFieldSet(this,_port,force$2(_classPrivateFieldGet(this,_port))),_classPrivateFieldSet(this,_parsed,!0)}}),_deserializeQueryParameters.set(this,{writable:!0,value:(paramString="")=>coalesceb$1(paramString)?new Map(paramString.trim().match(/(((?<key>[^&]+)(?:=)(?<value>[^&]+))|(?<bool>[^&]+))[&|\n]?/g).map(p=>{const mode="boolean"===_classPrivateFieldGet(this,_querymode)||("string"===_classPrivateFieldGet(this,_querymode)?"":null),values=p.replace("&","").split("=").concat([mode]),value=values[1];return"string"==typeof value&&("true"===value.trim().toLowerCase()||"false"===value.trim().toLowerCase()?values[1]=force$1(value):isNaN(value)||(values[1]=force$2(value))),values})):new Map}),_classPrivateFieldSet(this,_insecure,force$1(coalesceb$1(insecure,!1))),this.href=uri,this.query=new Proxy({},{get:(obj,prop)=>{!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this);const result=_classPrivateFieldGet(this,_queryObject).get(prop);switch(_classPrivateFieldGet(this,_querymode)){case"string":return"";case"null":return null}return result},set:(obj,prop,value)=>{const oldParamVal=_classPrivateFieldGet(this,_queryObject).get(prop);if(oldParamVal===value)return!1;const old=Object.freeze(Object.fromEntries(_classPrivateFieldGet(this,_queryObject)));switch(_classPrivateFieldGet(this,_querymode)){case"null":case"string":null===coalesceb$1(value)&&(value=!0)}_classPrivateFieldGet(this,_queryObject).set(prop,value);const newValue=Object.freeze(Object.fromEntries(_classPrivateFieldGet(this,_queryObject)));return _classPrivateFieldSet(this,_querystring,Array.from(_classPrivateFieldGet(this,_queryObject)).map(items=>`${items[0]}=${items[1]}`).join("&")),this.emit("query.update",{old:old,new:newValue,parameter:{name:prop,old:oldParamVal,new:value}}),!0},has:(obj,prop)=>_classPrivateFieldGet(this,_queryObject).has(prop),deleteProperty:(obj,prop)=>_classPrivateFieldGet(this,_queryObject).delete(prop),ownKeys:obj=>Array.from(_classPrivateFieldGet(this,_queryObject).keys()),defineProperty:(obj,prop,descriptor)=>{coalesce$1(descriptor.enumerable,!0)&&_classPrivateFieldGet(this,_queryObject).add(prop,coalesce$1(descriptor.value,descriptor.get))},getOwnPropertyDescriptor:(obj,prop)=>{const val=_classPrivateFieldGet(this,_queryObject).get(prop);return{enumerable:void 0!==val,configurable:!0,writable:void 0!==val,value:val}}}),this.alias("scheme",this.protocol)}get protocol(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_protocol)}set protocol(value){if(null!==(value=/^(.*):?(\/+?.*)?/i.exec(value))&&value.length>0&&value[1]!==_classPrivateFieldGet(this,_protocol)){const old=_classPrivateFieldGet(this,_protocol);_classPrivateFieldSet(this,_protocol,value[1]),this.emit("update.protocol",{old:old,new:_classPrivateFieldGet(this,_protocol)})}}get username(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_username)}set username(value){if(value.length>0&&value!==_classPrivateFieldGet(this,_username)){const old=_classPrivateFieldGet(this,_username);_classPrivateFieldSet(this,_username,value),this.emit("update.username",{old:old,new:value})}}get password(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),null===coalesceb$1(_classPrivateFieldGet(this,_password))?null:_classPrivateFieldGet(this,_insecure)?_classPrivateFieldGet(this,_password):_classPrivateFieldGet(this,_password).replace(/./g,"*")}set password(value){if((null===(value=coalesceb$1(value))||value.length>0)&&value!==_classPrivateFieldGet(this,_password)){let old=coalesce$1(_classPrivateFieldGet(this,_password),"");_classPrivateFieldGet(this,_insecure)||(old=old.replace(/./g,"*")),_classPrivateFieldSet(this,_password,value),this.emit("update.password",{old:old,new:value?value.replace(/./g,"*"):null})}}get hostname(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_hostname)}set hostname(value){if((value=coalesce$1(value,"").trim().toLowerCase()).length>0&&value!==_classPrivateFieldGet(this,_hostname)){const old=_classPrivateFieldGet(this,_hostname);_classPrivateFieldSet(this,_hostname,value),this.emit("update.hostname",{old:old,new:value})}}get host(){return`${this.hostname}:${this.port}`}get port(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),coalesce$1(_classPrivateFieldGet(this,_port),this.defaultPort)}set port(value){if("string"==typeof(value=coalesceb$1(value,"default"))&&(value=coalesce$1(_classPrivateFieldGet(this,_defaultPort)[value.trim().toLowerCase()],this.defaultPort)),null===value||value<1||value>65535)throw new Error(`"${value}" is an invalid port. Must be a number between 1-65535, "default" to use the protocol's default port, or one of these recognized protocols: ${Object.keys(_classPrivateFieldGet(this,_defaultPort)).join(", ")}.`);if(_classPrivateFieldGet(this,_port)!==value){const old=_classPrivateFieldGet(this,_port);_classPrivateFieldSet(this,_port,value),this.emit("update.port",{old:old,new:this.port})}}resetPort(){this.port=null}get defaultPort(){return coalesce$1(_classPrivateFieldGet(this,_defaultPort)[_classPrivateFieldGet(this,_protocol)],"file"!==_classPrivateFieldGet(this,_protocol)?80:null)}get path(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_path)}set path(value){if((value=coalesceb$1(value,"/"))!==_classPrivateFieldGet(this,_path)){const old=_classPrivateFieldGet(this,_path);_classPrivateFieldSet(this,_path,value),this.emit("update.path",{old:old,new:value})}}get querystring(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_querystring)}set querystring(value){if((value=coalesceb$1(value)||"")!==_classPrivateFieldGet(this,_querystring)){const old=_classPrivateFieldGet(this,_querystring);_classPrivateFieldSet(this,_querystring,value),_classPrivateFieldSet(this,_queryObject,_classPrivateFieldGet(this,_deserializeQueryParameters).call(this,value)),this.emit("update.querystring",{old:old,new:value})}}get hash(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_hash)}set hash(value){if((value=coalesce$1(value,"").trim().replace(/^#+/,""))!==_classPrivateFieldGet(this,_hash)){const old=_classPrivateFieldGet(this,_hash);_classPrivateFieldSet(this,_hash,value),this.emit("update.hash",{old:old,new:value})}}get href(){return this.toString()}set href(uri){_classPrivateFieldSet(this,_originalURI,uri),_classPrivateFieldSet(this,_uri$1,uri),_classPrivateFieldSet(this,_parsed,!1),_classPrivateFieldGet(this,_parse).call(this)}get searchParams(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_parts).searchParams}get origin(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_parts).origin}get search(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),_classPrivateFieldGet(this,_parts).search}get local(){return!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this),localschemes.has(this.hostname.toLowerCase())}toString(cfg={}){!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this);const uri=new URL(this.protocol+"://nourl/");if(coalesce$1(cfg.path,!0)&&(uri[uri.pathname?"pathname":"path"]=_classPrivateFieldGet(this,_path).replace(/\/{2,}|\\{2,}/g,"/")),"file"!==uri.protocol&&((cfg.username||cfg.password)&&(uri.username=_classPrivateFieldGet(this,_username)),cfg.password&&_classPrivateFieldGet(this,_password)&&(uri.password=_classPrivateFieldGet(this,_password)),coalesce$1(cfg.hostname,!0)&&(uri.hostname=_classPrivateFieldGet(this,_hostname)),(cfg.forcePort||this.port!==this.defaultPort)&&(uri.port=this.port),coalesce$1(cfg.hash,!0)&&coalesceb$1(_classPrivateFieldGet(this,_hash))&&(uri.hash=_classPrivateFieldGet(this,_hash)),coalesce$1(cfg.querystring,!0)&&this.queryParameterCount>0)){const qs=[];for(const[key,value]of _classPrivateFieldGet(this,_queryObject))"boolean"==typeof value&&cfg.shrinkQuerystring?value&&qs.push(key):qs.push(`${key}${0===value.toString().trim().length?"":"="+value}`);qs.length>0&&(uri.search=qs.join("&"))}let result=uri.toString().replace(/\/\/nourl\//,"");return coalesce$1(cfg.protocol,!0)||(result=result.replace(this.protocol+"://","")),cfg.forcePort&&result.indexOf(":"+this.port)<0&&(result=result.replace(uri.hostname,`${uri.hostname}:${this.port}`)),result}formatString(template="{{protocol}}{{separator}}{{hostname}}{{port}}{{path}}{{querystring}}{{hash}}",encode=!0,separator="://"){const hasQueryString=this.queryParameterCount>0,hasHash=null!==coalesceb$1(_classPrivateFieldGet(this,_hash)),result=template.replace(/{+protocol}+/gi,coalesce$1(this.protocol)).replace(/{+scheme}+/gi,coalesce$1(this.protocol)).replace(/{+username}+/gi,coalesce$1(this.username)).replace(/{+password}+/gi,coalesce$1(this.password)).replace(/{+hostname}+/gi,coalesce$1(this.hostname)).replace(/{+host}+/gi,coalesce$1(this.hostname)).replace(/{+port}+/gi,this.port===this.defaultPort?"":":"+this.port).replace(/{+path}+/gi,this.path).replace(/{+querystring}+/gi,hasQueryString?"?"+this.querystring:"").replace(/{+query}+/gi,hasQueryString?"?"+this.querystring:"").replace(/{+hash}+/gi,hasHash?"#"+this.hash:"").replace(/{+separator}+/gi,separator);return encode?encodeURI(result):result}setDefaultProtocolPort(protocol,port){if("object"==typeof protocol)return void Object.keys(protocol).forEach(key=>this.setDefaultProtocolPort(key,protocol[key]));protocol=protocol.trim().toLowerCase(),port=force$2(port,10);const old=_classPrivateFieldGet(this,_defaultPort)[protocol];_classPrivateFieldGet(this,_defaultPort)[protocol]=port,old!==port&&this.emit("update.defaultport",{protocol:protocol,old:old,new:port})}removeDefaultProtocolPort(){for(let protocol of arguments){protocol=protocol.trim().toLowerCase();const old=_classPrivateFieldGet(this,_defaultPort)[protocol];old&&(delete _classPrivateFieldGet(this,_defaultPort)[protocol],this.emit("delete.defaultport",{protocol:protocol,old:old}))}}isSameOrigin(url,strictProtocol=!1){!_classPrivateFieldGet(this,_parsed)&&_classPrivateFieldGet(this,_parse).call(this);const parts="string"==typeof url?new URL(url,`${_classPrivateFieldGet(this,_protocol)}://${_classPrivateFieldGet(this,_hostname)}`):url;return coalesceb$1(parts.hostname,_classPrivateFieldGet(this,_hostname))===_classPrivateFieldGet(this,_hostname)&&(!strictProtocol||parts.protocol===this.protocol)}get hasQueryParameters(){return this.queryParameterCount>0}get queryParameterCount(){return Object.keys(this.query).length}set queryMode(mode="boolean"){if(null===mode&&NGN$6.WARN("Query mode was set to a null object. Expected a string ('null'). The value was auto-converted to a string, but this method is only supposed to receive string values."),(mode=coalesce$1(mode,"null").trim().toLowerCase())!==_classPrivateFieldGet(this,_querymode)&&new Set(["boolean","string","null"]).has(mode)){const old=_classPrivateFieldGet(this,_querymode);_classPrivateFieldSet(this,_querymode,mode),this.emit("update.querymode",{old:old,new:mode})}}}const cacheStatusCodes=new Set([412,304]),REDIRECTS=Symbol("redirect count"),BLOBS=new Set(["document","blog"]),HTTP_REDIRECT=new Set([301,302,303,304,305,306,307,308]),NGN$5=(new Reference).requires("runtime","INFO");let client,POLYFILLED=!1;function createClient(){return new Promise(async resolve=>{client||("node"===NGN$5.runtime?(client=await import("./node-7edb1ea2.js").catch(console.error),POLYFILLED=void 0!==client.POLYFILLED?client.POLYFILLED:POLYFILLED):client=await import("./fetch-1ae6d304.js").catch(console.error),client=client.default),resolve(client)})}async function Fetch(resource,init,caller=null){return(init=init||{}).method="string"==typeof init.method?init.method.toUpperCase():"GET",init.cache=coalesceb$1(init.cache,"default"),init.redirect=coalesceb$1(init.redirect,"follow"),init.responseType=coalesceb$1(init.responseType,"text"),init.referrerPolicy=coalesceb$1(init.referrerPolicy,"unsafe-url"),init[REDIRECTS]=coalesceb$1(init[REDIRECTS],0),resource="string"==typeof resource?new URL(resource):resource,new Promise((resolve,reject)=>init.method?"CONNECT"===init.method?reject(new Error("CONNECT is not a valid fetch method. It is only used for opening network tunnels, not complete HTTP requests.")):void createClient().then(request=>{request(resource,init).then(r=>{resolve(r);const redirects=init[REDIRECTS];delete init[REDIRECTS],NGN$5.INFO("HTTP Request",{request:Object.assign({},{url:resource.href,redirects:redirects},init),response:r,caller:caller,runtime:NGN$5.runtime})}).catch(reject)}).catch(reject):reject(new Error("An HTTP method is required.")))}createClient().catch(console.error);const NGN$4=(new Reference).requires("EventEmitter");var _values=new WeakMap,_prefix=new WeakMap,_keyCase=new WeakMap,_key=new WeakMap;class EnhancedMap extends NGN$4.EventEmitter{constructor(init={},keyCase=null,prefix=""){if(super(),_values.set(this,{writable:!0,value:void 0}),_prefix.set(this,{writable:!0,value:void 0}),_keyCase.set(this,{writable:!0,value:null}),_key.set(this,{writable:!0,value:key=>(key=function force$3(value){if(null===value)return"null";if(void 0===value)return"undefined";switch(typeOf(value)){case"string":return value;case"boolean":return value?"true":"false";case"date":return value.toISOString();case"array":return value.join(",");case"object":return JSON.stringify(value);default:return value.name?value.name:value.toString?value.toString():"unknown-"+typeOf(value)}}(key),"lower"===_classPrivateFieldGet(this,_keyCase)?key.toLowerCase():"upper"===_classPrivateFieldGet(this,_keyCase)?key.toUpperCase():key)}),_classPrivateFieldSet(this,_keyCase,keyCase),null===keyCase)_classPrivateFieldSet(this,_values,new Map(Object.entries(init)));else{_classPrivateFieldSet(this,_values,new Map);for(const[name,value]of Object.entries(init))_classPrivateFieldGet(this,_values).set(_classPrivateFieldGet(this,_key).call(this,name),value)}_classPrivateFieldSet(this,_prefix,0===prefix.trim().length?"":(prefix.trim()+".").replace(/\.{2,}/gi,"."))}get size(){return _classPrivateFieldGet(this,_values).size}append(name,value){const key=_classPrivateFieldGet(this,_key).call(this,name),old=_classPrivateFieldGet(this,_values).get(key);_classPrivateFieldGet(this,_values).has(key)&&(value=old.split(", ").concat([value]).join(", ")),_classPrivateFieldGet(this,_values).set(key,value),old?this.emit(_classPrivateFieldGet(this,_prefix)+"update",{name:name,old:old,new:value}):this.emit(_classPrivateFieldGet(this,_prefix)+"create",{name:name,value:value})}delete(name){const key=_classPrivateFieldGet(this,_key).call(this,name);if(_classPrivateFieldGet(this,_values).has(key)){const old=_classPrivateFieldGet(this,_values).get(key);_classPrivateFieldGet(this,_values).delete(key),this.emit(_classPrivateFieldGet(this,_prefix)+"delete",{name:name,value:old})}}entries(){return _classPrivateFieldGet(this,_values).entries()}forEach(fn){return _classPrivateFieldGet(this,_values).entries.forEach(fn)}get(name){return _classPrivateFieldGet(this,_values).get(_classPrivateFieldGet(this,_key).call(this,name))}has(name){return _classPrivateFieldGet(this,_values).has(_classPrivateFieldGet(this,_key).call(this,name))}keys(){return _classPrivateFieldGet(this,_values).keys()}set(name,value){const key=_classPrivateFieldGet(this,_key).call(this,name),exists=_classPrivateFieldGet(this,_values).has(key),old=_classPrivateFieldGet(this,_values).get(key);return _classPrivateFieldGet(this,_values).set(key,value),exists?old!==value&&this.emit(_classPrivateFieldGet(this,_prefix)+"update",{name:name,old:old,new:value}):this.emit(_classPrivateFieldGet(this,_prefix)+"create",{name:name,value:value}),_classPrivateFieldGet(this,_values)}values(){return _classPrivateFieldGet(this,_values).values()}clear(){const entries=_classPrivateFieldGet(this,_values).entries();_classPrivateFieldGet(this,_values).clear();for(const[name,value]of entries)this.emit(_classPrivateFieldGet(this,_prefix)+"delete",{name:name,value:value})}toString(){return _classPrivateFieldGet(this,_values).toString()}toObject(){return Object.fromEntries(_classPrivateFieldGet(this,_values))}get Map(){return _classPrivateFieldGet(this,_values).Map}}class Headers extends EnhancedMap{constructor(init={}){super(init,"lower","header")}}const NGN$3=new Reference;var _user=new WeakMap,_secret$1=new WeakMap,_accessToken$1=new WeakMap,_accessTokenType$1=new WeakMap,_applyAuthHeader=new WeakMap;class Credential extends NGN$3.EventEmitter{constructor(cfg={}){super(...arguments),_user.set(this,{writable:!0,value:null}),_secret$1.set(this,{writable:!0,value:null}),_accessToken$1.set(this,{writable:!0,value:null}),_accessTokenType$1.set(this,{writable:!0,value:"Bearer"}),_applyAuthHeader.set(this,{writable:!0,value:null}),this.name=coalesceb$1(cfg.name,"HTTP Credential"),_classPrivateFieldSet(this,_user,coalesceb$1(cfg.username)),_classPrivateFieldSet(this,_secret$1,coalesceb$1(cfg.password)),_classPrivateFieldSet(this,_accessToken$1,coalesceb$1(cfg.accessToken)),_classPrivateFieldSet(this,_accessTokenType$1,coalesceb$1(cfg.accessTokenType,"Bearer")),Object.defineProperties(this,{basicAuthToken:NGN$3.hiddenconstant((user,secret)=>"node"===NGN$3.runtime?"Basic "+Buffer.from(`${user}:${secret}`,"binary").toString("base64"):"Basic "+BTOA(`${user}:${secret}`))}),this.on(["update.access*","update.username","update.password"],()=>this.emit("update.header",this.header))}set reference(value){value&&"function"==typeof value.applyAuthorizationHeader&&(_classPrivateFieldSet(this,_applyAuthHeader,value.applyAuthorizationHeader),_classPrivateFieldGet(this,_applyAuthHeader).call(this))}get header(){return null!==coalesceb$1(_classPrivateFieldGet(this,_accessToken$1))?`${_classPrivateFieldGet(this,_accessTokenType$1)} ${_classPrivateFieldGet(this,_accessToken$1)}`:coalesceb$1(_classPrivateFieldGet(this,_user))&&coalesceb$1(_classPrivateFieldGet(this,_secret$1))?this.basicAuthToken(_classPrivateFieldGet(this,_user),_classPrivateFieldGet(this,_secret$1)):null}get authType(){return _classPrivateFieldGet(this,_accessToken$1)?"token":coalesceb$1(_classPrivateFieldGet(this,_user))&&coalesceb$1(_classPrivateFieldGet(this,_secret$1))?"basic":"none"}get username(){return coalesceb$1(_classPrivateFieldGet(this,_user))}set username(user){const old=_classPrivateFieldGet(this,_user);user=coalesceb$1(user),_classPrivateFieldGet(this,_user)!==user&&_classPrivateFieldSet(this,_user,user),old!==_classPrivateFieldGet(this,_user)&&(this.emit("update.username",{old:old,new:_classPrivateFieldGet(this,_user)}),_classPrivateFieldGet(this,_applyAuthHeader)&&_classPrivateFieldGet(this,_applyAuthHeader).call(this))}set password(secret){const old=_classPrivateFieldGet(this,_secret$1);secret=coalesceb$1(secret),_classPrivateFieldGet(this,_secret$1)!==secret&&_classPrivateFieldSet(this,_secret$1,secret),old!==_classPrivateFieldGet(this,_secret$1)&&(this.emit("update.password"),_classPrivateFieldGet(this,_applyAuthHeader)&&_classPrivateFieldGet(this,_applyAuthHeader).call(this))}set accessToken(token){const old=_classPrivateFieldGet(this,_accessToken$1);token=coalesceb$1(token),_classPrivateFieldGet(this,_accessToken$1)!==token&&_classPrivateFieldSet(this,_accessToken$1,token),token&&(this.username=null,this.password=null),old!==token&&(this.emit("update.accessToken"),_classPrivateFieldGet(this,_applyAuthHeader)&&_classPrivateFieldGet(this,_applyAuthHeader).call(this))}set accessTokenType(value){if((value=coalesceb$1(value,"bearer"))!==_classPrivateFieldGet(this,_accessTokenType$1)){const old=_classPrivateFieldGet(this,_accessTokenType$1);_classPrivateFieldSet(this,_accessTokenType$1,value),this.emit("update.accessTokenType",{old:old,new:value}),_classPrivateFieldGet(this,_applyAuthHeader)&&_classPrivateFieldGet(this,_applyAuthHeader).call(this)}}get accessTokenType(){return _classPrivateFieldGet(this,_accessTokenType$1)}clone(){return new Credential({username:_classPrivateFieldGet(this,_user),password:_classPrivateFieldGet(this,_secret$1),accessToken:_classPrivateFieldGet(this,_accessToken$1),accessTokenType:_classPrivateFieldGet(this,_accessTokenType$1)})}}const NGN$2=(new Reference).requires("WARN","public","hidden","hiddenconstant","nodelike","EventEmitter"),{WARN:WARN$2}=NGN$2;var _method=new WeakMap,_headers=new WeakMap,_body=new WeakMap,_cache$1=new WeakMap,_mode$1=new WeakMap,_referrerPolicy$1=new WeakMap,_credentials$1=new WeakMap,_redirect$1=new WeakMap,_controller=new WeakMap,_uri=new WeakMap,_auth=new WeakMap,_proxyAuth=new WeakMap,_rawURL=new WeakMap,_signKey$1=new WeakMap,_verifyKey$1=new WeakMap,_encryptKey$1=new WeakMap,_decryptKey$1=new WeakMap;class Request extends NGN$2.EventEmitter{constructor(cfg={}){super(),_method.set(this,{writable:!0,value:"GET"}),_headers.set(this,{writable:!0,value:new Headers}),_body.set(this,{writable:!0,value:null}),_cache$1.set(this,{writable:!0,value:"default"}),_mode$1.set(this,{writable:!0,value:"cors"}),_defineProperty(this,"referrer",null),_referrerPolicy$1.set(this,{writable:!0,value:"no-referrer-when-downgrade"}),_credentials$1.set(this,{writable:!0,value:void 0}),_redirect$1.set(this,{writable:!0,value:"follow"}),_defineProperty(this,"sri",null),_controller.set(this,{writable:!0,value:void 0}),_uri.set(this,{writable:!0,value:void 0}),_auth.set(this,{writable:!0,value:void 0}),_proxyAuth.set(this,{writable:!0,value:void 0}),_rawURL.set(this,{writable:!0,value:void 0}),_signKey$1.set(this,{writable:!0,value:void 0}),_verifyKey$1.set(this,{writable:!0,value:void 0}),_encryptKey$1.set(this,{writable:!0,value:void 0}),_decryptKey$1.set(this,{writable:!0,value:void 0}),this.name="HTTP Request","string"==typeof cfg&&(cfg={url:cfg}),(cfg.url instanceof URL||cfg.url instanceof Address)&&(cfg.url=cfg.href),object.require(cfg,"url"),_classPrivateFieldSet(this,_rawURL,cfg.url instanceof URL||cfg.url instanceof Address?cfg.url.href:cfg.url),object.any(cfg,"form","json")&&WARN$2("Request",'"form" and "json" configuration properties are invalid. Use "body" instead.'),this.url=cfg.url,_classPrivateFieldSet(this,_method,coalesceb$1(cfg.method,"GET")),_classPrivateFieldSet(this,_headers,new Headers(coalesceb$1(cfg.headers,{}))),_classPrivateFieldSet(this,_body,coalesce$1(cfg.body)),this.credentials=coalesceb$1(cfg.credentials),this.cache=coalesce$1(cfg.cache,NGN$2.nodelike?"no-store":"default"),this.referrer=coalesceb$1(cfg.referrer),this.referrerPolicy=coalesce$1(cfg.referrerPolicy,"no-referrer-when-downgrade"),this.sri=coalesceb$1(cfg.sri,cfg.integrity,cfg.subresourceintegrity,cfg.subresourceIntegrity),this.redirect=coalesceb$1(cfg.redirect,"follow"),this.mode=coalesceb$1(cfg.mode),Object.defineProperties(this,{enforceMethodSafety:NGN$2.hidden(coalesce$1(cfg.enforceMethodSafety,cfg.enforcemethodsafety,!0)),timeout:NGN$2.public(coalesce$1(cfg.timeout,3e4)),isCrossOrigin:NGN$2.hiddenconstant(url=>_classPrivateFieldGet(this,_uri).isSameOrigin(url)),applyAuthorizationHeader:NGN$2.hiddenconstant(()=>{const authHeader=_classPrivateFieldGet(this,_auth).header,proxyAuthHeader=_classPrivateFieldGet(this,_proxyAuth).header;authHeader?this.setHeader("Authorization",authHeader,!0):this.removeHeader("Authorization"),proxyAuthHeader?this.setHeader("Proxy-Authorization",proxyAuthHeader,!0):this.removeHeader("Proxy-Authorization")}),prepareBody:NGN$2.hidden(()=>{if(null!==_classPrivateFieldGet(this,_body)){const contentType=coalesceb$1(this.getHeader("content-type"));switch(typeof _classPrivateFieldGet(this,_body)){case"object":if(object.exactly(_classPrivateFieldGet(this,_body),"form")){const dataString=[];for(let[key,value]of Object.entries(_classPrivateFieldGet(this,_body).form)){if("function"==typeof value)throw new Error("Invalid form data. Form data cannot be a complex data format such as an object or function.");"object"==typeof value&&(value=JSON.stringify(value)),dataString.push(`${key}=${encodeURIComponent(value)}`)}_classPrivateFieldSet(this,_body,dataString.join("&")),this.setHeader("Content-Type","application/x-www-form-urlencoded")}else _classPrivateFieldSet(this,_body,JSON.stringify(_classPrivateFieldGet(this,_body)).trim()),this.setHeader("Content-Length",_classPrivateFieldGet(this,_body).length),this.setHeader("Content-Type",coalesceb$1(contentType,"application/json"));break;case"string":if(null!==contentType){let match=/([^=]+)=([^&]+)/.exec(_classPrivateFieldGet(this,_body));null!==match&&"data:"!==_classPrivateFieldGet(this,_body).trim().substr(0,5).toLowerCase()&&"<"!==_classPrivateFieldGet(this,_body).trim().substr(0,1).toLowerCase()?this.setHeader("Content-Type","application/x-www-form-urlencoded"):(null===contentType&&this.setHeader("Content-Type","text/plain"),"data:"===_classPrivateFieldGet(this,_body).trim().substr(0,5).toLowerCase()?(match=/^(data:)(.*);/gi.exec(_classPrivateFieldGet(this,_body).trim()),null!==match&&this.setHeader("Content-Type",match[2])):/^(<\?xml.*)/gi.test(_classPrivateFieldGet(this,_body).trim())?this.setHeader("Content-Type","application/xml"):/^<html.*/gi.test(_classPrivateFieldGet(this,_body).trim())&&this.setHeader("Content-Type","text/html"))}else null===contentType&&this.setHeader("Content-Type","text/plain");this.setHeader("Content-Length",_classPrivateFieldGet(this,_body).length);break;default:WARN$2("NGN.Request.body",`The request body cannot be ${typeof _classPrivateFieldGet(this,_body)}. Please provide a string, object, or binary value for the body.`)}}}),AUTH_CREDENTIAL:NGN$2.set(cred=>{_classPrivateFieldSet(this,_auth,cred.clone())}),PROXY_CREDENTIAL:NGN$2.set(cred=>{_classPrivateFieldSet(this,_proxyAuth,cred.clone())})}),_classPrivateFieldSet(this,_auth,new Credential({username:coalesceb$1(cfg.username),password:coalesceb$1(cfg.password),accessToken:coalesceb$1(cfg.accessToken),accessTokenType:coalesceb$1(cfg.accessTokenType,"Bearer")})),_classPrivateFieldSet(this,_proxyAuth,new Credential({username:coalesceb$1(cfg.proxyUsername),password:coalesceb$1(cfg.proxyPassword),accessToken:coalesceb$1(cfg.proxyAccessToken),accessTokenType:coalesceb$1(cfg.proxyAccessTokenType,"Bearer")})),_classPrivateFieldGet(this,_auth).reference=this,_classPrivateFieldGet(this,_proxyAuth).reference=this,_classPrivateFieldSet(this,_signKey$1,coalesceb$1(cfg.signingKey)),_classPrivateFieldSet(this,_verifyKey$1,coalesceb$1(cfg.verificationKey)),_classPrivateFieldSet(this,_encryptKey$1,coalesceb$1(cfg.encryptionKey,cfg.encryptKey)),_classPrivateFieldSet(this,_decryptKey$1,coalesceb$1(cfg.decryptionKey,cfg.decryptKey)),this.method=coalesceb$1(cfg.method,"GET"),this.prepareBody()}get signingKey(){return _classPrivateFieldGet(this,_signKey$1)}set signingKey(value){_classPrivateFieldSet(this,_signKey$1,value)}get verificationKey(){return _classPrivateFieldGet(this,_verifyKey$1)}set verificationKey(value){_classPrivateFieldSet(this,_verifyKey$1,value)}get encryptionKey(){return _classPrivateFieldGet(this,_encryptKey$1)}set encryptionKey(value){_classPrivateFieldSet(this,_encryptKey$1,value)}get decryptionKey(){return _classPrivateFieldGet(this,_decryptKey$1)}set decryptionKey(value){_classPrivateFieldSet(this,_decryptKey$1,value)}get configuredURL(){return _classPrivateFieldGet(this,_rawURL)}get authType(){return _classPrivateFieldGet(this,_auth).authType}get proxyAuthType(){return _classPrivateFieldGet(this,_proxyAuth).authType}get cache(){return _classPrivateFieldGet(this,_cache$1)}set cache(value){if("string"!=typeof(value=coalesceb$1(value,"default")))throw new Error(`Cache mode must be one of the following: ${Array.from(CACHE_MODES).join(", ")}. "${value}" is invalid.`);if(_classPrivateFieldGet(this,_cache$1)!==value){const old=_classPrivateFieldGet(this,_cache$1);if(value=value.trim().toLowerCase(),!CACHE_MODES.has(value))throw new Error(`"${value}" is an unrecognized cache mode.Must be one of: ${Array.from(CACHE_MODES).join(", ")}.`);_classPrivateFieldSet(this,_cache$1,value),"only-if-cached"===value&&"same-origin"!==_classPrivateFieldGet(this,_mode$1)&&(this.mode="same-origin",WARN$2('Request\'s CORS mode automatically set to "same-origin" for caching mode of "only-if-cached".')),this.emit("update.cache",{old:old,new:value})}}get mode(){return _classPrivateFieldGet(this,_mode$1)}set mode(value){if((value=coalesceb$1(value))!==_classPrivateFieldGet(this,_mode$1)){if(null!==value&&"string"!=typeof value)throw new Error(`CORS mode must be cors, no-cors, or same-origin. "${value}" is invalid.`);const old=_classPrivateFieldGet(this,_mode$1);if(null!==value&&"only-if-cached"!==_classPrivateFieldGet(this,_cache$1)&&(value=value.trim().toLowerCase(),!CORS_MODES.has(value)))throw new Error(`"${value} is an invalid CORS mode. Must be one of: ${Array.from(CORS_MODES).join(", ")}`);_classPrivateFieldSet(this,_mode$1,value),this.emit("update.mode",{old:old,new:value})}}get referrerPolicy(){return _classPrivateFieldGet(this,_referrerPolicy$1)}set referrerPolicy(value){if(_classPrivateFieldGet(this,_referrerPolicy$1)!==value){const old=_classPrivateFieldGet(this,_referrerPolicy$1);if(null===coalesceb$1(value))_classPrivateFieldSet(this,_referrerPolicy$1,null);else{if(null==value||"string"!=typeof value)throw UnacceptableParameterTypeError(`Referrer policy "${value}" must be one of the following: ${Array.from(REFERRER_MODES).join(", ")}, null, or an empty string.`);if(value=value.trim().toLowerCase(),!REFERRER_MODES.has(value))throw UnacceptableParameterTypeError(`Referrer policy "${value}" must be one of the following: ${Array.from(REFERRER_MODES).join(", ")}, null, or an empty string.`);_classPrivateFieldSet(this,_referrerPolicy$1,value)}this.emit("update.referrerPolicy",{old:old,new:_classPrivateFieldGet(this,_referrerPolicy$1)})}}get credentials(){return _classPrivateFieldGet(this,_credentials$1)}set credentials(value){if((value=coalesce$1(value,"").trim().toLowerCase())!==_classPrivateFieldGet(this,_credentials$1)){const old=_classPrivateFieldGet(this,_credentials$1);if(0===value.length)return this.emit("update.credentials",{old:old,new:null}),void _classPrivateFieldSet(this,_credentials$1,null);if(!REQUEST_CREDENTIALS.has(value))throw UnacceptableParameterTypeError(`"${value}" must be one of the following: ${Array.from(REQUEST_CREDENTIALS).join(", ")}`);_classPrivateFieldSet(this,_credentials$1,value),this.emit("update.credentials",{old:old,new:value})}}get redirect(){return coalesceb$1(_classPrivateFieldGet(this,_redirect$1),"follow")}set redirect(value){if((value=coalesce$1(value,"follow").toLowerCase())!==_classPrivateFieldGet(this,_redirect$1)){if(!REDIRECT_MODES.has(value))throw UnacceptableParameterTypeError(`Redirect value of "${value}" must be one of the following: ${Array.from(REDIRECT_MODES).join(", ")}`);const old=_classPrivateFieldGet(this,_redirect$1);_classPrivateFieldSet(this,_redirect$1,value),this.emit("update.redirect",{old:old,new:_classPrivateFieldGet(this,_redirect$1)})}}get protocol(){return _classPrivateFieldGet(this,_uri).protocol}get host(){return _classPrivateFieldGet(this,_uri).toString({protocol:!1,username:!1,password:!1,urlencode:!1,hash:!1,querystring:!1})}get hostname(){return _classPrivateFieldGet(this,_uri).hostname}get port(){return _classPrivateFieldGet(this,_uri).port}get path(){return _classPrivateFieldGet(this,_uri).path}get querystring(){return _classPrivateFieldGet(this,_uri).querystring}get query(){return Object.freeze(Object.assign({},_classPrivateFieldGet(this,_uri).query))}set query(value){if(value instanceof Map&&(value=Object.fromEntries(value)),"object"!=typeof value)throw new TypeError("Query parameters must be set as an object or Map.");this.clearQueryParameters();for(const[key,val]of Object.entries(value))this.setQueryParameter(key,val)}get hash(){return coalesceb$1(_classPrivateFieldGet(this,_uri).hash)||""}get url(){return _classPrivateFieldGet(this,_uri).toString()}set url(value){coalesceb$1(value)||WARN$2("Request.url","A blank URL was identified for a request. Using current URL instead.");const old=_classPrivateFieldGet(this,_uri)?_classPrivateFieldGet(this,_uri).href:null;_classPrivateFieldSet(this,_uri,value instanceof URL?new Address(value.href):new Address(value)),coalesceb$1(_classPrivateFieldGet(this,_uri).username)&&(_classPrivateFieldGet(this,_auth).username=coalesceb$1(_classPrivateFieldGet(this,_uri).username)),coalesceb$1(_classPrivateFieldGet(this,_uri).password)&&(_classPrivateFieldGet(this,_auth).password=coalesceb$1(_classPrivateFieldGet(this,_uri).password)),old!==_classPrivateFieldGet(this,_uri).href&&this.emit("update.url",{old:old,new:_classPrivateFieldGet(this,_uri).href})}get href(){return this.url}set href(value){this.url=value}get method(){return _classPrivateFieldGet(this,_method)}set method(value){const old=_classPrivateFieldGet(this,_method);value=coalesceb$1(value),_classPrivateFieldGet(this,_method)!==value&&(value||WARN$2("NGN.Request.method","No HTTP method specified."),value=value.trim().toUpperCase(),HTTP_METHODS$1.has(value)&&WARN$2("NGN.Request.method",`A non-standard HTTP method was recognized in a request: ${value}.`),_classPrivateFieldSet(this,_method,value)),old!==_classPrivateFieldGet(this,_method)&&this.emit("update.method",{old:old,new:_classPrivateFieldGet(this,_method)})}get body(){return _classPrivateFieldGet(this,_body)}set body(value){if(_classPrivateFieldGet(this,_body)!==value){value&&"string"==typeof value?this.setHeader("content-type","text/plain"):this.removeHeader("content-type");const old=_classPrivateFieldGet(this,_body);_classPrivateFieldSet(this,_body,value),this.prepareBody(),this.emit("update.body",{old:old,new:this.body})}}get crossOriginRequest(){return _classPrivateFieldGet(this,_uri).isSameOrigin("./")}get username(){return _classPrivateFieldGet(this,_auth).username}set username(user){_classPrivateFieldGet(this,_auth).username=user}set password(secret){_classPrivateFieldGet(this,_auth).password=secret}set accessToken(token){_classPrivateFieldGet(this,_auth).accessToken=token}get accessTokenType(){return _classPrivateFieldGet(this,_auth).accessTokenType}set accessTokenType(value){_classPrivateFieldGet(this,_auth).accessTokenType=value}get proxyUsername(){return _classPrivateFieldGet(this,_proxyAuth).username}set proxyUsername(user){_classPrivateFieldGet(this,_proxyAuth).username=user}set proxyPassword(secret){_classPrivateFieldGet(this,_proxyAuth).password=secret}set proxyAccessToken(token){_classPrivateFieldGet(this,_proxyAuth).accessToken=token}get proxyAccessTokenType(){return _classPrivateFieldGet(this,_proxyAuth).accessTokenType}set proxyAccessTokenType(value){_classPrivateFieldGet(this,_proxyAuth).accessTokenType=value}get headers(){return _classPrivateFieldGet(this,_headers)}set headers(value){_classPrivateFieldSet(this,_headers,"object"==typeof value?new Headers(value):new Headers)}getHeader(name){return _classPrivateFieldGet(this,_headers).get(name)}setHeader(name,value,overwriteExisting=!0){!overwriteExisting&&this.headers.has(name)||_classPrivateFieldGet(this,_headers).set(name,value)}appendHeader(name,value){_classPrivateFieldGet(this,_headers).append(...arguments)}removeHeader(name){_classPrivateFieldGet(this,_headers).delete(name)}setQueryParameter(key,value,overwriteExisting=!0){(overwriteExisting||void 0===_classPrivateFieldGet(this,_uri).query[key])&&(_classPrivateFieldGet(this,_uri).query[key]=value)}removeQueryParameter(key){delete _classPrivateFieldGet(this,_uri).query[key]}clearQueryParameters(){for(const key of Object.keys(_classPrivateFieldGet(this,_uri).query))delete _classPrivateFieldGet(this,_uri).query[key]}get queryParameterCount(){return _classPrivateFieldGet(this,_uri).queryParameterCount}get hasQueryParameters(){return _classPrivateFieldGet(this,_uri).hasQueryParameters}abort(){"node"===NGN$2.runtime?"function"==typeof _classPrivateFieldGet(this,_controller)&&_classPrivateFieldGet(this,_controller).call(this):null===_classPrivateFieldGet(this,_controller)||_classPrivateFieldGet(this,_controller).signal.aborted||_classPrivateFieldGet(this,_controller).abort()}async send(callback){let body=this.body;coalesce$1(body)&&this.enforceMethodSafety&&IDEMPOTENT_METHODS.has(this.method)&&(body=null);const init={method:this.method,cache:_classPrivateFieldGet(this,_cache$1),redirect:this.redirect,referrer:coalesceb$1(this.referrer),referrerPolicy:_classPrivateFieldGet(this,_referrerPolicy$1)};"only-if-cached"!==_classPrivateFieldGet(this,_cache$1)&&null===_classPrivateFieldGet(this,_mode$1)||(init.mode="only-if-cached"===_classPrivateFieldGet(this,_cache$1)?"same-origin":_classPrivateFieldGet(this,_mode$1));const crypto=(NGN$2.crypto||[null])[0];if((_classPrivateFieldGet(this,_encryptKey$1)||_classPrivateFieldGet(this,_decryptKey$1)||_classPrivateFieldGet(this,_signKey$1)||_classPrivateFieldGet(this,_verifyKey$1))&&!crypto)throw new Error("cryptography is unavailable (hint: is the crypto plugin loaded?)");let res;null!==body&&_classPrivateFieldGet(this,_encryptKey$1)&&(body=await crypto.encrypt(body,_classPrivateFieldGet(this,_encryptKey$1)),this.setHeader("content-type","application/octet-stream; charset=UTF-8"),this.setHeader("content-transfer-encoding","base64",!1),this.appendHeader("content-encoding",crypto.encryptionAlgorithm(_classPrivateFieldGet(this,_encryptKey$1))),this.setHeader("content-length",body.length)),null!==body&&_classPrivateFieldGet(this,_signKey$1)&&this.setHeader("signature",await crypto.sign(body,_classPrivateFieldGet(this,_signKey$1))),_classPrivateFieldGet(this,_headers).size>0&&(init.headers=_classPrivateFieldGet(this,_headers).toObject()),this.timeout>0&&(init.timeout=this.timeout),globalThis.AbortController?(_classPrivateFieldSet(this,_controller,new globalThis.AbortController),init.signal=_classPrivateFieldGet(this,_controller).signal,init.signal.addEventListener("abort",e=>{_classPrivateFieldSet(this,_controller,null),this.emit("abort",e)})):"node"===NGN$2.runtime&&(init.signal=req=>{_classPrivateFieldSet(this,_controller,()=>{req.destroy(),this.emit("abort",new Error("Aborted"))})}),REQUEST_CREDENTIALS.has(_classPrivateFieldGet(this,_credentials$1))?init.credentials=_classPrivateFieldGet(this,_credentials$1):"none"!==_classPrivateFieldGet(this,_auth).authType&&WARN$2("Request",`"${_classPrivateFieldGet(this,_credentials$1)}" is not a valid option. Must be one of the following: ${Array.from(REQUEST_CREDENTIALS).join(", ")}`),coalesceb$1(this.sri,this.integrity)&&(init.integrity=coalesce$1(this.sri,this.integrity)),null===body||REQUEST_NOBODY_METHODS.has(init.method)||(init.body=body);try{res=await Fetch(_classPrivateFieldGet(this,_uri),init,this)}catch(e){return callback?callback(e):e}if(null!==coalesceb$1(res.body)){const signature=res.headers.get("signature");if(_classPrivateFieldGet(this,_verifyKey$1)&&signature&&!crypto.verify(res.body,signature,_classPrivateFieldGet(this,_verifyKey$1)))throw new Error(`Could not validate response (signature: ${signature})`);const decryptKey=coalesceb$1(_classPrivateFieldGet(this,_decryptKey$1),_classPrivateFieldGet(this,_encryptKey$1));if(decryptKey)try{res.body=crypto.decrypt(decryptKey,res.body),delete res.JSON,Object.defineProperty(res,"JSON",{enumerable:!0,get(){try{return"object"==typeof res.body?res.body:JSON.parse(res.body)}catch(e){return null}}})}catch(e){}}return callback&&callback(null,res),res}clone(){const req=new Request({url:this.url,method:_classPrivateFieldGet(this,_method),headers:Object.fromEntries(_classPrivateFieldGet(this,_headers).entries()),mode:_classPrivateFieldGet(this,_mode$1),credentials:_classPrivateFieldGet(this,_credentials$1),redirect:_classPrivateFieldGet(this,_redirect$1),cache:_classPrivateFieldGet(this,_cache$1),referrer:this.referrer,referrerPolicy:_classPrivateFieldGet(this,_referrerPolicy$1),query:this.query,body:_classPrivateFieldGet(this,_body),signingKey:this.signingKey,verificationKey:this.verificationKey,encryptionKey:this.encryptionKey,decryptionKey:this.decryptionKey,sri:this.sri,enforceMethodSafety:this.enforceMethodSafety,timeout:this.timeout});req.AUTH_CREDENTIAL=_classPrivateFieldGet(this,_auth),req.PROXY_CREDENTIAL=_classPrivateFieldGet(this,_proxyAuth)}assign(){let override=!0;const args=Array.from(arguments);"boolean"==typeof args[args.length-1]&&(override=args.pop());for(const req of args){if(!(req instanceof Request))throw new Error("Cannot assign a non-Request value to a request.");merge(this,req,override)}}}function merge(a,b,override=!0){let aa=a,bb=b;override||(aa=b,bb=a),a.method=coalesceb$1(bb.method,aa.method),a.body=coalesceb$1(bb.body,aa.body),a.username=coalesceb$1(bb.username,aa.username),a.password=coalesceb$1(bb.password,aa.SECERT),a.accessToken=coalesceb$1(bb.accessToken,aa.accessToken),a.accessTokenType=coalesceb$1(bb.accessTokenType,aa.accessTokenType),a.cache=coalesceb$1(bb.cache,aa.cache),a.mode=coalesceb$1(bb.mode,aa.mode),a.referrer=coalesceb$1(bb.referrer,aa.referrer),a.referrerPolicy=coalesceb$1(bb.referrerPolicy,aa.referrerPolicy),a.sri=coalesceb$1(bb.sri,aa.sri),a.enforceMethodSafety=coalesceb$1(bb.enforceMethodSafety,aa.enforceMethodSafety),a.timeout=coalesceb$1(bb.timeout,aa.timeout),a.signingKey=coalesceb$1(bb.signingKey,aa.signingKey),a.verificationKey=coalesceb$1(bb.verificationKey,aa.verificationKey),a.encryptionKey=coalesceb$1(bb.encryptionKey,aa.encryptionKey),a.decryptionKey=coalesceb$1(bb.decryptionKey,aa.decryptionKey);for(const[name,value]of b.headers.entries())a.setHeader(name,value,override);for(const[key,value]of Object.entries(b.query))a.setQueryParameter(key,value,override)}const NGN$1=(new Reference).requires("EventEmitter","WARN"),{WARN:WARN$1}=NGN$1,HTTP_METHODS=new Set(["OPTIONS","HEAD","GET","POST","PUT","DELETE","TRACE","JSON","JSONP"]);class HttpClient extends NGN$1.EventEmitter{constructor(){super(),this.name="HTTP Client",Object.defineProperties(this,{httpmethods:NGN$1.hiddenconstant(HTTP_METHODS),normalizeUrl:NGN$1.hiddenconstant(url=>new Address(url).toString({username:!0,password:!0,urlencode:!1})),parseRequestConfig:NGN$1.hiddenconstant((cfg={},method="GET")=>((cfg="string"==typeof cfg?{url:cfg}:cfg).method=method,cfg.url=coalesceb$1(cfg.url,HOSTNAME),cfg)),send:NGN$1.hiddenconstant((method,args=[])=>{const callback="function"==typeof args[args.length-1]?args.pop():null;args.length>0&&"string"==typeof args[0]&&"object"==typeof args[1]&&(args[1].url=coalesceb$1(args[1].url,args[0]),args.shift());const cfg=this.parseRequestConfig(...args,method.toUpperCase()),request=new Request(cfg);return this.preflight(request,cfg),request.send(callback)})}),HTTP_METHODS.forEach(m=>this.alias(m,this[m.toLowerCase()])),this.register("HttpClient",this)}get Request(){return Request}request(cfg={},callback){const method=coalesceb$1(cfg.method,"GET");return delete cfg.method,this.send(method,[cfg,callback])}options(){return this.send("OPTIONS",[...arguments])}head(){return this.send("HEAD",[...arguments])}get(){return this.send("GET",[...arguments])}post(){let args=[...arguments];return args.length>1&&"string"==typeof args[0]&&"object"==typeof args[1]&&(args=[Object.assign({url:args[0]},args[1])]),this.send("POST",args)}put(){let args=[...arguments];return args.length>1&&"string"==typeof args[0]&&"object"==typeof args[1]&&(args=[Object.assign({url:args[0]},args[1])]),this.send("PUT",args)}delete(){return this.send("DELETE",[...arguments])}trace(){return WARN$1("NGN.Request.method","An HTTP TRACE request was made."),this.send("TRACE",[...arguments])}json(url,callback){let cfg="string"==typeof url?{url:url}:{};cfg.headers={Accept:"application/json, application/ld+json, application/vnd.api+json, */json, */*json;q=0.8"},"object"==typeof callback&&(cfg=Object.assign(cfg,callback),callback=arguments[2]||null);const wrapper=new Promise((resolve,reject)=>{this.send("GET",[cfg]).then(r=>{if(null===r.JSON&&r.status>=400)return reject(new Error("could not parse response body"));resolve(r.JSON)}).catch(reject)});return callback?wrapper.then(data=>callback(null,data)).catch(callback):wrapper}jsonp(url,callback,callbackParameter="callback"){return new Promise((resolve,reject)=>{if("browser"!==NGN$1.runtime){const err=new Error("JSONP is not available in non-browser runtimes.");return void(callback?callback(err):reject(err))}const fn="jsonp_callback_"+Math.round(1e5*Math.random());window[fn]=data=>{delete window[fn],document.querySelector("head").removeChild(script),callback&&callback(null,data),resolve(data)};const script=document.createElement("script");script.src=`${url}${url.indexOf("?")>=0?"&":"?"}${callbackParameter}=${fn}`,script.addEventListener("error",e=>{delete window[fn];const err=new Error("The JSONP request was blocked. This may be the result of an invalid URL, cross origin restrictions, or the remote server may not be responding.");callback?(callback(err),resolve()):reject(err)}),document.querySelector("head").appendChild(script)})}preflight(request,configuration){}}const NGN=(new Reference).requires("WARN"),{WARN:WARN}=NGN,bool=v=>null===v?null:force$1(v),REQUEST_ATTRIBUTES=new Set(["proxyUsername","hash","redirect","port","path","host","hostname","referrerPolicy","mode","cache","proxyAuthType","authType"]);var _baseUrl=new WeakMap,_request=new WeakMap,_secret=new WeakMap,_accessToken=new WeakMap,_accessTokenTimer=new WeakMap,_accessTokenExpiration=new WeakMap,_accessTokenType=new WeakMap,_accessTokenRenewalDuration=new WeakMap,_accessTokenRenewalTimer=new WeakMap,_nocache=new WeakMap,_unique=new WeakMap,_tlsonly=new WeakMap,_useragent=new WeakMap,_uniqueagent=new WeakMap,_mode=new WeakMap,_credentials=new WeakMap,_cache=new WeakMap,_redirect=new WeakMap,_referrer=new WeakMap,_referrerPolicy=new WeakMap,_signKey=new WeakMap,_verifyKey=new WeakMap,_encryptKey=new WeakMap,_decryptKey=new WeakMap,_encryptAll=new WeakMap,_decryptAll=new WeakMap,_signAll=new WeakMap,_verifyAll=new WeakMap,_cryptokey=new WeakMap;class Resource extends HttpClient{constructor(cfg={}){super(),_baseUrl.set(this,{writable:!0,value:void 0}),_request.set(this,{writable:!0,value:void 0}),_secret.set(this,{writable:!0,value:void 0}),_accessToken.set(this,{writable:!0,value:void 0}),_accessTokenTimer.set(this,{writable:!0,value:void 0}),_accessTokenExpiration.set(this,{writable:!0,value:void 0}),_accessTokenType.set(this,{writable:!0,value:void 0}),_accessTokenRenewalDuration.set(this,{writable:!0,value:0}),_accessTokenRenewalTimer.set(this,{writable:!0,value:void 0}),_nocache.set(this,{writable:!0,value:void 0}),_unique.set(this,{writable:!0,value:void 0}),_tlsonly.set(this,{writable:!0,value:void 0}),_useragent.set(this,{writable:!0,value:void 0}),_uniqueagent.set(this,{writable:!0,value:void 0}),_mode.set(this,{writable:!0,value:void 0}),_credentials.set(this,{writable:!0,value:void 0}),_cache.set(this,{writable:!0,value:void 0}),_redirect.set(this,{writable:!0,value:void 0}),_referrer.set(this,{writable:!0,value:void 0}),_referrerPolicy.set(this,{writable:!0,value:void 0}),_signKey.set(this,{writable:!0,value:void 0}),_verifyKey.set(this,{writable:!0,value:void 0}),_encryptKey.set(this,{writable:!0,value:void 0}),_decryptKey.set(this,{writable:!0,value:void 0}),_encryptAll.set(this,{writable:!0,value:void 0}),_decryptAll.set(this,{writable:!0,value:void 0}),_signAll.set(this,{writable:!0,value:void 0}),_verifyAll.set(this,{writable:!0,value:void 0}),_cryptokey.set(this,{writable:!0,value:function(seed,update,allow=!0,keywords){if(!coalesceb$1(allow,!0))return null;const value=coalesceb$1(coalesceb$1(...seed),update);if(allow&&null===value)throw new Error(`cannot ${keywords[0]} ${keywords[1]} body without a ${keywords[2]}`);return value}}),this.name="HTTP Resource",_classPrivateFieldSet(this,_baseUrl,new Address(coalesce$1((cfg="string"==typeof cfg?{baseUrl:cfg}:cfg).baseURL,cfg.baseUrl,cfg.baseurl,globalThis.location?globalThis.location.origin:`http://${HOSTNAME}/`))),_classPrivateFieldSet(this,_request,new Request({url:_classPrivateFieldGet(this,_baseUrl).href,headers:coalesceb$1(cfg.headers,{}),username:cfg.username,password:cfg.password,accessToken:coalesceb$1(cfg.token,cfg.accessToken,cfg.accesstoken),redirect:coalesce$1(cfg.redirect,_classPrivateFieldGet(this,_redirect),"follow")})),cfg.mode&&(_classPrivateFieldGet(this,_request).mode=cfg.mode),cfg.credentials&&(_classPrivateFieldGet(this,_request).credentials=cfg.credentials),cfg.referrer&&(_classPrivateFieldGet(this,_request).referrer=cfg.referrer),cfg.referrerPolicy&&(_classPrivateFieldGet(this,_request).referrerPolicy=cfg.referrerPolicy),_classPrivateFieldSet(this,_secret,coalesceb$1(cfg.password)),coalesce$1(cfg.httpsOnly,cfg.httpsonly,!1)&&(_classPrivateFieldGet(this,_baseUrl).protocol="https",_classPrivateFieldGet(this,_request).url=_classPrivateFieldGet(this,_baseUrl).href,_classPrivateFieldSet(this,_tlsonly,!0));for(const[key,value]of Object.entries(coalesceb$1(cfg.query,{})))_classPrivateFieldGet(this,_request).setQueryParameter(key,value,!0);_classPrivateFieldSet(this,_nocache,coalesce$1(cfg.nocache,!1)),_classPrivateFieldGet(this,_nocache)?_classPrivateFieldSet(this,_cache,"no-cache"):_classPrivateFieldSet(this,_cache,cfg.cache),_classPrivateFieldSet(this,_unique,coalesce$1(cfg.unique,!1)),_classPrivateFieldSet(this,_useragent,coalesce$1(cfg.useragent)),_classPrivateFieldSet(this,_uniqueagent,coalesce$1(cfg.uniqueagent,!1)),_classPrivateFieldSet(this,_accessTokenRenewalDuration,Math.floor(coalesce$1(cfg.tokenRenewalNotice,cfg.tokenrenewalNotice,cfg.tokenRenewalnotice,cfg.tokenrenewalnotice,0))),_classPrivateFieldSet(this,_signKey,coalesceb$1(cfg.signingKey)),_classPrivateFieldSet(this,_verifyKey,coalesceb$1(cfg.verificationKey)),_classPrivateFieldSet(this,_encryptKey,coalesceb$1(cfg.encryptionKey,cfg.encryptKey)),_classPrivateFieldSet(this,_decryptKey,coalesceb$1(cfg.decryptionKey,cfg.decryptKey)),_classPrivateFieldSet(this,_encryptAll,bool(coalesceb$1(cfg.encryptAll,cfg.encryptall))),_classPrivateFieldSet(this,_decryptAll,bool(coalesceb$1(cfg.decryptAll,cfg.decryptall))),_classPrivateFieldSet(this,_signAll,bool(coalesceb$1(cfg.signAll,cfg.signall))),_classPrivateFieldSet(this,_verifyAll,bool(coalesceb$1(cfg.verifyAll,cfg.verifyall))),this.on("token.expired",()=>{clearTimeout(_classPrivateFieldGet(this,_accessTokenTimer)),clearTimeout(_classPrivateFieldGet(this,_accessTokenRenewalTimer)),this.removeHeader("Authorization"),WARN(this.name+" HTTP client access token expired.")}),_classPrivateFieldGet(this,_request).relay("*",this),this.register("HttpResource",this)}set encryptAll(value){_classPrivateFieldSet(this,_encryptAll,bool(value))}set decryptAll(value){_classPrivateFieldSet(this,_decryptAll,bool(value))}set signAll(value){_classPrivateFieldSet(this,_signAll,bool(value))}set verifyAll(value){_classPrivateFieldSet(this,_verifyAll,bool(value))}get signingKey(){return _classPrivateFieldGet(this,_signKey)}set signingKey(value){_classPrivateFieldSet(this,_signKey,value)}get verificationKey(){return _classPrivateFieldGet(this,_verifyKey)}set verificationKey(value){_classPrivateFieldSet(this,_verifyKey,value)}get encryptionKey(){return _classPrivateFieldGet(this,_encryptKey)}set encryptionKey(value){_classPrivateFieldSet(this,_encryptKey,value)}get decryptionKey(){return _classPrivateFieldGet(this,_decryptKey)}set decryptionKey(value){_classPrivateFieldSet(this,_decryptKey,value)}get baseUrl(){return _classPrivateFieldGet(this,_request).href}set baseUrl(value){const old=_classPrivateFieldGet(this,_baseUrl),uri=new Address(value);_classPrivateFieldSet(this,_baseUrl,uri),WARN(`The ${this.name} HTTP resource base URL changed from "${old.toString()}" to "${uri.toString()}"`)}get username(){return _classPrivateFieldGet(this,_request).username}set username(value){_classPrivateFieldGet(this,_request).username=value}set password(value){_classPrivateFieldGet(this,_request).password=value}get cache(){return _classPrivateFieldGet(this,_cache)}set cache(value){_classPrivateFieldGet(this,_request).cache=value}get mode(){return _classPrivateFieldGet(this,_mode)}set mode(value){_classPrivateFieldGet(this,_request).mode=value}get credentials(){return _classPrivateFieldGet(this,_credentials)}set credentials(value){_classPrivateFieldGet(this,_request).credentials=value}get redirect(){return _classPrivateFieldGet(this,_redirect)}set redirect(value){if(value!==_classPrivateFieldGet(this,_redirect)){if(!REDIRECT_MODES.has(value))throw UnacceptableParameterTypeError();_classPrivateFieldGet(this,_request).redirect=value}}get referrer(){return _classPrivateFieldGet(this,_referrer)}set referrer(value){_classPrivateFieldGet(this,_request).referrer=value}get referrerPolicy(){return _classPrivateFieldGet(this,_referrerPolicy)}set referrerPolicy(value){_classPrivateFieldGet(this,_request).referrerPolicy=value}get headers(){return _classPrivateFieldGet(this,_request).headers}set headers(value){_classPrivateFieldGet(this,_request).headers=value}set accessToken(value){this.setAccessToken(value)}setAccessToken(token=null,type="Bearer",expiration=null){(token!==_classPrivateFieldGet(this,_accessToken)||null!==token&&this.getHeader("Authorization")!==`${type} ${token}`||_classPrivateFieldGet(this,_accessTokenExpiration)!==expiration)&&(_classPrivateFieldGet(this,_request).accessToken=token,_classPrivateFieldSet(this,_accessTokenType,type),clearTimeout(_classPrivateFieldGet(this,_accessTokenTimer)),clearTimeout(_classPrivateFieldGet(this,_accessTokenRenewalTimer)),expiration&&(isNaN(expiration)||(expiration=new Date(expiration)),_classPrivateFieldSet(this,_accessTokenExpiration,expiration),(expiration=expiration.getTime()-(new Date).getTime())<=0?this.emit("token.expired",{manually:!1}):(this.emit("token.update",{expires:_classPrivateFieldGet(this,_accessTokenExpiration)}),_classPrivateFieldSet(this,_accessTokenTimer,setTimeout(()=>this.emit("token.expired",{manually:!1}),expiration)),_classPrivateFieldGet(this,_accessTokenRenewalDuration)>0&&_classPrivateFieldSet(this,_accessTokenRenewalTimer,setTimeout(()=>this.emit("token.expiration.pending",this),_classPrivateFieldGet(this,_accessTokenRenewalDuration))))))}get query(){return _classPrivateFieldGet(this,_request).query}set query(value){_classPrivateFieldGet(this,_request).query=value}route(path){return new Proxy(this,{get(target,prop){switch(prop){case"baseUrl":return target.prepareUrl(path);case"prepareUrl":return uri=>new URL(uri,target.prepareUrl(path)).href}return HTTP_METHODS$1.has(prop.toUpperCase())&&"function"==typeof target[prop]?function(){const args=Array.from(arguments);return target[prop](path+"/"+args.shift(),...args)}:"REQUEST"===prop.toUpperCase()?(cfg={},callback)=>(cfg.url=path+"/"+arguments[0],target.request(cfg,callback)):target[prop]}})}prepareUrl(uri){const input=uri;return uri=new Address(new URL(uri,_classPrivateFieldGet(this,_baseUrl).href)),/^\.{2}/.test(input)||(uri.path=`${_classPrivateFieldGet(this,_baseUrl).path}/${uri.path}`.replace(/\/{2,}|\\/gi,"/")),_classPrivateFieldGet(this,_tlsonly)&&(uri.protocol="https"),uri.href}preflight(req,cfg){req.encryptionKey=_classPrivateFieldGet(this,_cryptokey).call(this,[cfg.encryptionKey,cfg.encryptKey],_classPrivateFieldGet(this,_encryptKey),coalesce$1(cfg.encrypt,_classPrivateFieldGet(this,_encryptAll)),["encrypt","request","encryption key"]),req.decryptionKey=_classPrivateFieldGet(this,_cryptokey).call(this,[cfg.decryptionKey,cfg.decryptKey],coalesceb$1(_classPrivateFieldGet(this,_decryptKey),_classPrivateFieldGet(this,_encryptKey)),coalesce$1(cfg.decrypt,_classPrivateFieldGet(this,_decryptAll)),["decrypt","response","decryption key"]),req.signingKey=_classPrivateFieldGet(this,_cryptokey).call(this,[cfg.signingKey,cfg.signKey],_classPrivateFieldGet(this,_signKey),coalesce$1(cfg.sign,_classPrivateFieldGet(this,_signAll)),["sign","request","private key"]),req.verificationKey=_classPrivateFieldGet(this,_cryptokey).call(this,[cfg.verificationKey,cfg.verifyKey],_classPrivateFieldGet(this,_verifyKey),coalesce$1(cfg.verify,_classPrivateFieldGet(this,_verifyAll)),["verify","response","public key"]),req.url=this.prepareUrl(req.configuredURL),req.assign(_classPrivateFieldGet(this,_request),!1),_classPrivateFieldGet(this,_nocache)&&(req.cache="no-cache");for(const[param,value]of Object.entries(coalesceb$1(cfg.query,{})))req.setQueryParameter(param,value);for(const[header,value]of Object.entries(coalesceb$1(cfg.headers,{})))req.setHeader(header,value);_classPrivateFieldGet(this,_unique)&&req.setQueryParameter("nocache"+(new Date).getTime().toString()+Math.random().toString().replace(".",""),"");let useragent=coalesce$1(_classPrivateFieldGet(this,_useragent));_classPrivateFieldGet(this,_uniqueagent)&&(useragent+=" ID#"+((new Date).getTime().toString()+Math.random().toString().replace(".",""))),useragent&&("browser"!==NGN.runtime?req.setHeader("User-Agent",useragent.trim()):(req.removeHeader("user-agent"),WARN(`Cannot set user agent to "${useragent.trim()}" in a browser. Browsers consider this an unsafe operation and will block the request.`))),coalesceb$1(cfg.accessToken)?req.accessToken=cfg.accessToken:(coalesceb$1(cfg.username)&&(req.username=cfg.username),req.username&&coalesceb$1(cfg.password)&&(req.password=cfg.password)),req.accessToken&&coalesceb$1(cfg.accessTokenType)&&(req.accessTokenType=cfg.accessTokenType),req.proxyUsername&&coalesceb$1(cfg.proxyPassword)&&(req.proxyPassword=cfg.proxyPassword);for(const attr of REQUEST_ATTRIBUTES)coalesceb$1(cfg[attr])&&(req[attr]=cfg[attr])}setHeader(key,value){if("object"!=typeof key)_classPrivateFieldGet(this,_request).headers.set(key,value);else for(const[attr,val]of key)_classPrivateFieldGet(this,_request).headers.set(attr,val)}removeHeader(key){Array.from(arguments).forEach(el=>_classPrivateFieldGet(this,_request).headers.delete(el))}clearHeaders(){_classPrivateFieldGet(this,_request).headers=new Map}setParameter(key,value){if("object"!=typeof key)_classPrivateFieldGet(this,_request).setQueryParameter(key,value);else for(const[attr,val]of key)_classPrivateFieldGet(this,_request).setQueryParameter(attr,val)}removeParameter(){Array.from(arguments).forEach(_classPrivateFieldGet(this,_request).removeQueryParameter)}clearParameters(){_classPrivateFieldGet(this,_request).clearQueryParameters()}clone(cfg={}){const resource=new Resource({baseUrl:coalesceb$1(cfg.baseUrl,_classPrivateFieldGet(this,_baseUrl).href),headers:coalesceb$1(cfg.headers,this.headers),mode:coalesceb$1(cfg.mode,_classPrivateFieldGet(this,_mode)),credentials:coalesceb$1(cfg.credentials,_classPrivateFieldGet(this,_credentials)),cache:coalesceb$1(cfg.cache,_classPrivateFieldGet(this,_cache)),redirect:coalesceb$1(cfg.redirect,_classPrivateFieldGet(this,_redirect)),referrer:coalesceb$1(cfg.referrer,_classPrivateFieldGet(this,_referrer)),referrerPolicy:coalesceb$1(cfg.referrerPolicy,_classPrivateFieldGet(this,_referrerPolicy)),username:coalesceb$1(cfg.username,this.username),password:coalesceb$1(cfg.password,_classPrivateFieldGet(this,_secret)),accessToken:coalesceb$1(cfg.accessToken,_classPrivateFieldGet(this,_accessToken)),httpsOnly:coalesceb$1(cfg.httpsOnly,_classPrivateFieldGet(this,_tlsonly)),query:coalesceb$1(cfg.query,this.query),nocache:coalesceb$1(cfg.nocache,_classPrivateFieldGet(this,_nocache)),unique:coalesceb$1(cfg.unique,_classPrivateFieldGet(this,_unique)),useragent:coalesceb$1(cfg.useragent,_classPrivateFieldGet(this,_useragent)),uniqueagent:coalesceb$1(cfg.uniqueagent,_classPrivateFieldGet(this,_uniqueagent)),tokenRenewalNotice:coalesceb$1(cfg.tokenRenewalNotice,_classPrivateFieldGet(this,_accessTokenRenewalDuration))});return this.relay("*",resource,"origin"),resource}}const moduleVersion="1.0.0-alpha.23";export{BLOBS as B,HttpClient as Client,Fetch,HTTP_REDIRECT as H,HOSTNAME,INTERFACES,POLYFILLED,REDIRECTS as R,Request,Resource,URL_PATTERN as U,Address as URL,cacheStatusCodes as a,Reference as b,coalesceb$1 as c,coalesce$1 as d,moduleVersion};
//# sourceMappingURL=../net-debug/index.js.map
