"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlashOption = void 0;
const internal_1 = require("@discordx/internal");
const index_js_1 = require("../../index.js");
/**
 * Add a slash command option
 *
 * @param options - Slash option options
 * ___
 *
 * [View Documentation](https://discordx.js.org/docs/discordx/decorators/command/slash-option)
 *
 * @category Decorator
 */
function SlashOption(options) {
    return function (target, key, index) {
        (0, index_js_1.SlashNameValidator)(options.name);
        const option = index_js_1.DApplicationCommandOption.create({
            autocomplete: options.autocomplete,
            channelType: options.channelTypes,
            description: options.description,
            descriptionLocalizations: options.descriptionLocalizations,
            index: index,
            maxLength: options.maxLength,
            maxValue: options.maxValue,
            minLength: options.minLength,
            minValue: options.minValue,
            name: options.name,
            nameLocalizations: options.nameLocalizations,
            required: options.required,
            type: options.type,
        }).decorate(target.constructor, key, target[key], target.constructor, index);
        index_js_1.MetadataStorage.instance.addModifier(internal_1.Modifier.create((original) => {
            original.options = [...original.options, option];
        }, index_js_1.DApplicationCommand).decorate(target.constructor, key, target[key], target.constructor, index));
        index_js_1.MetadataStorage.instance.addApplicationCommandSlashOption(option);
    };
}
exports.SlashOption = SlashOption;
//# sourceMappingURL=SlashOption.js.map