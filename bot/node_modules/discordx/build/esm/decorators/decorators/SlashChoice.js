import { Modifier } from "@discordx/internal";
import { DApplicationCommandOption, DApplicationCommandOptionChoice, MetadataStorage, } from "../../index.js";
/**
 * The slash command option can implement autocompletion for string and number types
 *
 * @param choices - choices
 * ___
 *
 * [View Documentation](https://discordx.js.org/docs/discordx/decorators/command/slash-choice)
 *
 * @category Decorator
 */
export function SlashChoice(...choices) {
    return function (target, key, index) {
        MetadataStorage.instance.addModifier(Modifier.create((original) => {
            const allChoices = choices.map((choice) => {
                const resolveChoice = typeof choice === "number"
                    ? { name: choice.toString(), value: choice }
                    : typeof choice === "string"
                        ? { name: choice, value: choice }
                        : choice;
                return DApplicationCommandOptionChoice.create(resolveChoice);
            });
            original.choices = [...allChoices, ...original.choices];
        }, DApplicationCommandOption).decorate(target.constructor, key, target[key], target.constructor, index));
    };
}
//# sourceMappingURL=SlashChoice.js.map