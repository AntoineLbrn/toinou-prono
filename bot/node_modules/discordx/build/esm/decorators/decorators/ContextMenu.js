import { ApplicationCommandType } from "discord.js";
import { DApplicationCommand, MetadataStorage } from "../../index.js";
/**
 * Interact with context menu with a defined identifier
 *
 * @param options - Application command options
 * ___
 *
 * [View Documentation](https://discordx.js.org/docs/discordx/decorators/gui/context-menu)
 *
 * @category Decorator
 */
export function ContextMenu(options) {
    return function (target, key) {
        const applicationCommand = DApplicationCommand.create({
            botIds: options.botIds,
            defaultMemberPermissions: options.defaultMemberPermissions,
            description: "",
            dmPermission: options.dmPermission,
            guilds: options.guilds,
            name: options.name ?? key,
            nameLocalizations: options.nameLocalizations,
            type: options.type,
        }).decorate(target.constructor, key, target[key]);
        if (options.type === ApplicationCommandType.Message) {
            MetadataStorage.instance.addApplicationCommandMessage(applicationCommand);
        }
        else {
            MetadataStorage.instance.addApplicationCommandUser(applicationCommand);
        }
    };
}
//# sourceMappingURL=ContextMenu.js.map